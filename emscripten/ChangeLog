2011-??-??: Version 2.0

  * Bundled headers
    * TODO: try to not need all the -h in tests/runner.py, and for user scripts too

2011-07-31: Version 1.5

  * eSpeak text-to-speech demo
  * Filesystem emulation API
  * Parse metadata type info for easier interaction with llvm structures
  * Bindings generator improvements
  * Many library improvements and fixes
  * Various bug fixes

2011-07-10: Version 1.4

  * Compiling and loading of dynamic libraries
  * Automatic bindings generation using CppHeaderParser
  * Much improved emscripten.py
  * Many library improvements and fixes
  * Various bug fixes

2011-06-22: Version 1.3

  * Optional typed arrays with single shared buffer (TA2)
  * Optional support for nonportable optimizations with TA2
  * Relooper optimizations
  * Reading from stdin on the web opens window.prompt
  * Various bug fixes

2011-05-29: Version 1.2

  * Doom demo
  * Major SDL improvements: color palettes, input events, audio
  * Various improvements for CHECK_* and CORRECT_*, and new AUTO_OPTIMIZE
  * Experimental work towards supporting OpenGL in WebGL
  * Various bug fixes

2011-05-01: Version 1.1

  * Much improved Bullet demo (llvm opts, quantum = 1, CubicVR.js)
  * QUANTUM == 1 a.k.a memory compression option
  * Dead function elimination tool
  * Various performance improvements in generated code
  * Various bug fixes

2011-04-09: Version 1.0

  * Poppler test and web demo
  * Optimize compiler memory usage very significantly
  * Support for LLVM 2.9
  * Better interaction with closure compiler
  * Finish docs/paper.pdf
  * Many bug fixes

2011-03-05: Version 0.9

  * OpenJPEG test and web demo
  * Line number debugging info and autodebugger tool
  * CORRECT_ROUNDINGS option
  * Line-specific CORRECT_* options
  * 20% faster compilation
  * Generate strict mode JavaScript
  * Many bug fixes, additional tests and library implementations

2011-02-06: Version 0.8

  * Freetype web demo (2011-02-08, right after 0.8)
  * Freetype and zlib tests (including the entire build procedure)
  * File emulation
  * CHECK_OVERFLOWS & CORRECT_OVERFLOWS options to handle numerical size issues
  * CHECK_SIGNS option to find whether GUARD_SIGNS is necessary
  * Improvements to usage of llvm optimizations, and testing
  * Many bug fixes, additional tests and library implementations

2010-12-18: Version 0.7

  * Python web demo
  * Support for essentially all LLVM optimizations
  * Proper support for C bitfields
  * Many bug fixes, additional tests and library implementations

2010-11-25: Version 0.6

  * Web demos: Lua and Bullet/WebGL
  * SAFE_HEAP checks for invalid reads/writes, nonportable .ll
  * Basic C++ exceptions support (|catch(...)|)
  * Optimize compilation of very large projects (memory and speed)
  * Support for frontend-optimized .ll input, plus tests
  * Integration (combining scripts with compiled C++) tools and tests
  * Many bug fixes, additional tests and library implementations

2010-11-02: Version 0.5

  * Much faster compilation, in particular of large projects
  * Bullet physics library test
  * GCC name demangling test
  * Module-ization of generated code (optional)
  * Name demangler and namespace generator tools
  * Many code cleanups, bug fixes, additional tests and library implementations

2010-10-17: Version 0.4

  * Much faster optimized code, now 10X the speed of our unoptimized code
  * Support for the recently-released LLVM 2.8
  * Support for typed arrays
  * Integration with the Closure Compiler
  * Benchmarking framework in test runner
  * Many code cleanups, bug fixes, and additional tests

2010-10-05: Version 0.3

  * Much faster compilation (but still slow with relooper)
  * Clang support
  * Optional memory alignment that precisely matches C/C++
  * Proper memory management, including stack and (optional) dlmalloc
  * Rewritten relooper; no emulated blocks in any test
  * Initial support for SDL
  * Raytracing test + web demo
  * Many code cleanups, bug fixes, additional tests and library implementations

2010-09-11: Version 0.2

  * sauer (cubescript) test passes (without RELOOPing), + web demo
  * ES_SIZEOF - safe&portable sizeof replacement
  * emscripten.py tool for easy compiling
  * Better debugging support, using SAFE_HEAP and LABEL_DEBUG, using internal preprocessor
  * Compiler can now run all tests in both SpiderMonkey and V8
  * Various compiler optimizations (still barely scratched the surface though)
  * Many code cleanups, bug fixes, additional tests and library implementations

2010-08-28: Version 0.1

  * All tests pass, including fannkuch and fasta, but constglobalstructs
  * Relooping of Fannkuch is complete, fasta has one left
  * Emscriptened Fannkuch is 19X slower than gcc -O0, 37X than gcc -O2

